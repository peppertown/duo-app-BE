// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  sub          String? @unique
  email        String  @unique
  password     String?
  nickname     String?
  profileUrl   String?
  authProvider String?
  code         String  @unique

  couplesAsA Couple[] @relation("CoupleA")
  couplesAsB Couple[] @relation("CoupleB")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Todo      Todo[]
}

model Couple {
  id          Int       @id @default(autoincrement())
  name        String?
  aId         Int
  bId         Int
  a           User      @relation("CoupleA", fields: [aId], references: [id])
  b           User      @relation("CoupleB", fields: [bId], references: [id])
  createdAt   DateTime  @default(now())
  anniversary DateTime?
  Todo        Todo[]
}

model Todo {
  id        Int      @id @default(autoincrement())
  coupleId  Int
  writerId  Int
  content   String
  isDone    Boolean  @default(false)
  createdAt DateTime @default(now())

  couple Couple @relation(fields: [coupleId], references: [id])
  writer User   @relation(fields: [writerId], references: [id])
}
